import processing.core.PApplet;

public class LSystem extends PApplet{

	public static void main(String[] args) {
		PApplet.main("LSystem");
	}

	public void settings()
	{
		size(600, 600);
	}
	double x, y, angle;
	public void setup()
	{
		x = width/2;
		y = height/2;
		angle = 0;
		frameRate(10);
		noLoop();
	}
	public void draw()
	{
		drawSerpinskiTriangle("F-G-G", 4, 10);
	}
	public void move(double distance)
	{
		double x2 = x + distance*Math.cos(Math.toRadians(angle));
		double y2 = y + distance*Math.sin(Math.toRadians(angle));
		line((float)x, (float)y, (float)x2, (float)y2);
		x = x2;
		y = y2;
	}
	public void turn(double angle)
	{
		this.angle += angle;
	}
	
	public void drawSerpinskiTriangle(String str, int depth, int distance)
	{
		if(depth == 0)
		{
			for(int i = 0; i < str.length(); i++)
			{
				String letter = str.substring(i, i+1);
				if(letter.equals("F") || letter.equals("G"))
					move(distance);
				else if(letter.equals("+"))
					turn(120);
				else if(letter.equals("-"))
					turn(-120);
			}
		}
		else //string substitution
		{
			// G -> GG
			// F -> F - G + F + G - F
			// strings are immutable - can't be changed
			String newStr = "";
			//"F-G-G" at start
			for(int i = 0; i < str.length(); i++)
			{
				String letter = str.substring(i, i+1);
				if(letter.equals("F"))
					newStr += "F-G+F+G-F";
				else if(letter.equals("G"))
					newStr += "GG";
				else
					newStr += letter;
			}
			drawSerpinskiTriangle(newStr, depth-1, distance);
		}
	}

}











